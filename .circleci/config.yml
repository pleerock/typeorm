# Javascript Node CircleCI 2.0 configuration file
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
version: 2
jobs:
  build:
    working_directory: ~/typeorm
    docker:
      # specify pre-built docker images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/node:10.15.0
      - image: mysql:5.7.24
        environment:
          MYSQL_ROOT_PASSWORD: "admin"
          MYSQL_DATABASE: "test"
      - image: mariadb:10.1.37
        name: mariadb
        environment:
          MYSQL_ROOT_PASSWORD: "admin"
          MYSQL_DATABASE: "test"
      - image: circleci/postgres:9.6.11-postgis
        environment:
          POSTGRES_USER: "test"
          POSTGRES_PASSWORD: "test"
          POSTGRES_DB: "test"
      - image: circleci/mongo:3.4.18
#      - image: "store/saplabs/hanaexpress:2.00.040.00.20190729.1"
#        auth:
#          username: $DOCKER_USER
#          password: $DOCKER_PASSWORD
##       name: hanaexpress
##       container_name: "typeorm-hanaexpress"
##       hostname: hxe
#        command: ['--passwords-url', 'https://raw.githubusercontent.com/typeorm/typeorm/b119f7c3b8748aea9c77c7bc42b8e1be209b43ec/docker/hana/hxe-config.json', '--agree-to-sap-license']
##       ulimits:
##         nofile: 1048576
##       sysctls:
##         - kernel.shmmax=1073741824
##         - net.ipv4.ip_local_port_range=40000 60999
##         - kernel.shmmni=524288
##         - kernel.shmall=8388608
##       volumes:
##         - volume-hana-xe:/hana/mounts
##         - ./docker/hana/hxe-config.json:/hana/hxe-config.json
##       ports:
##         - 39013:39013
##         - 39017:39017
##         - 39041-39045:39041-39045
##         - 1128-1129:1128-1129
##         - 59013-59014:59013-59014
      # - image: mcr.microsoft.com/mssql/server:2017-GA-ubuntu
      #   environment:
      #     SA_PASSWORD: "Admin12345"
      #     ACCEPT_EULA: "Y"
      # - image: cockroachdb/cockroach-unstable:latest
      #   command: start --insecure

    steps:
      - checkout
      - run: sudo npm install -g npm@latest
      - run: cp ormconfig.circleci.json ormconfig.json

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # - run: docker-compose up -d

      # run tests
      - run: npm run lint
      - run: npm test
