sudo: required
language: node_js
node_js:
#  - stable
  - 9
  - 8
#  - 6
#  - 4
#  - 0.12
#  - 0.11

services:
  - docker

before_install:
  - sudo service mysql stop
  - sudo service postgresql stop
  - if [ -z "$DOCKER_USERNAME" ]; then echo "DOCKER_USERNAME is unset"; mv docker-compose-without-login.yml docker-compose.yml; else echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin; fi
  - docker-compose up -d

before_script:
  - if [ -n "$DOCKER_USERNAME" ]; then if  node -v | grep v9 ; then npm i oracledb@2.2.0 --no-save ; else npm i oracledb --no-save; fi; fi
  - if [ -n "$DOCKER_USERNAME" ]; then docker run --name typeorm-oracle-client store/oracle/database-instantclient:12.2.0.1;  mkdir /opt/oracle; cp ormconfig.travis.json ormconfig.json; docker cp typeorm-oracle-client:/usr/lib/oracle/12.2/client64 /opt/oracle/instantclient_12_2; export LD_LIBRARY_PATH=/opt/oracle/instantclient_12_2/lib:$LD_LIBRARY_PATH; else cp ormconfig.travis.no-login.json ormconfig.json; fi
  - if [ -n "$DOCKER_USERNAME" ]; then docker exec typeorm-oracle bash -c 'echo WHENEVER SQLERROR EXIT FAILURE > /tmp/user.sql; echo CREATE USER typeorm IDENTIFIED BY Passw0rd\; >> /tmp/user.sql;  echo GRANT CONNECT TO typeorm\; >> /tmp/user.sql; echo GRANT RESOURCE to typeorm\; >> /tmp/user.sql; echo GRANT UNLIMITED TABLESPACE TO typeorm\; >> /tmp/user.sql;  echo exit >> /tmp/user.sql'  ; fi
  - if [ -n "$DOCKER_USERNAME" ]; then docker exec typeorm-oracle bash -c 'until $ORACLE_HOME/bin/sqlplus -L -S system/oracle@//localhost:1521/xe @/tmp/user.sql  ; do echo waiting for oracle; sleep 10; done; sleep 60;'  ; fi
  
script:
  - npm test

after_success:
  - bash <(curl -s https://codecov.io/bash)
